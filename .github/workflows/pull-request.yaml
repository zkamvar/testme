name: "Receive Pull Request"

on:
  pull_request:
    types:
      [opened, synchronize, reopened]
    paths-ignore:
      - '.github/**'

jobs:
  build-md-source:
    name: "Build Markdown Source Files"
    runs-on: macOS-latest
    if: ${{ github.event.action != 'closed' }}
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      CHIVE: ${{ github.workspace }}/site/chive
      MD: ${{ github.workspace }}/site/built
    steps:
      - name: "Check out main branch"
        uses: actions/checkout@v2

      - name: "Test that no .github/** files have changed?"
        run: |
          if [[ $(git diff --staged --name-only | grep -c '^.github') -ne 0 ]]; then
            exit 0
          else
            echo "::error github actions scripts must NOT be modified"
            exit 1
          fi

      - name: "Check out staging branch"
        uses: actions/checkout@v2
        with:
          ref: md-outputs
          path: ${{ env.MD }}

      - uses: r-lib/actions/setup-r@v1
      - uses: r-lib/actions/setup-pandoc@v1
        with:
          pandoc-version: "2.10"

      - name: Query dependencies
        run: |
          install.packages('remotes')
          install.packages('drat')
          drat:::add('zkamvar')
          saveRDS(remotes::package_deps('sandpaper', dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install dependencies
        run: |
          remotes::install_github('carpentries/sandpaper', dependencies = TRUE)
        shell: Rscript {0}

      - name: Generate Diff
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          Rscript -e 'sandpaper::build_lesson()'
          mkdir -p ${{ env.CHIVE }}
          echo ${{ github.event.number }} > ${{ env.CHIVE }}/NR
          DIFF=${{ env.CHIVE }}/diff.md
          DEETS1="\n<details>\n<summary>"
          DEETS2="</summary>\n\n\`\`\`\`\`diff\n"
          DEETS3="\n\`\`\`\`\`\n\n</details>\n" >> $DIFF
          cd ${{ env.MD }}
          git add -A .
          printf "### Rendered Changes\n\n" > $DIFF
          printf "The following changes were observed in the rendered markdown documents\n" >> $DIFF
          printf "\n\`\`\`diff\n" >> $DIFF
          git diff --staged --compact-summary >> $DIFF
          printf "\n\`\`\`\n" >> $DIFF
          printf "\n### Per-file Breakdown\n" >> $DIFF
          for FILE in $(git diff --staged --name-only)
          do
            if [ -e ${FILE} ]; then
              printf ${DEETS1} >> ${DIFF}
              printf "Click here for diff of ${FILE}" >> ${DIFF}
              printf ${DEETS2} >> ${DIFF}
              # TODO: check for images here and either put a link to the URL of
              # the preview, show the new image or... something else
              git diff --staged --oneline $FILE >> $DIFF
              printf ${DEETS3} >> ${DIFF}
            fi
          done
          # removing git repo for the built archive.
          rm -rf .git # a nice message B)

      - name: Upload Diff
        uses: actions/upload-artifact@v2
        with:
          name: diff
          path: ${{ env.CHIVE }}
      
      - name: Upload Build
        uses: actions/upload-artifact@v2
        with:
          name: built
          path: ${{ env.MD }}

      - name: Teardown
        run: sandpaper::reset_site()
        shell: Rscript {0}
